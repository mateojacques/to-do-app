{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateo\\\\Documents\\\\Ensolvers\\\\to-do-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showForm, setShowForm] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http:localhost:5000/tasks');\n      const data = await res.json();\n      console.log(data);\n    };\n  });\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    console.log(newTask);\n    setTasks([...tasks, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowForm(!showForm),\n      showForm: showForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(Form, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }, this) : 'Add a task to start!']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wxcOtEIOlgBKfWy3IIZoWA+CCTw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mateo/Documents/Ensolvers/to-do-app/src/App.js"],"names":["Header","Tasks","useState","useEffect","Form","App","showForm","setShowForm","tasks","setTasks","fetchTasks","res","fetch","data","json","console","log","deleteTask","id","filter","task","addTask","Math","floor","random","newTask","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2BAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KALD;AAMD,GAPQ,CAAT;;AASA,QAAMI,UAAU,GAAIC,EAAD,IAAQ;AACzBT,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,OAAO,GAAID,IAAD,IAAU;AACxB,UAAMF,EAAE,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAACP,MAAAA,EAAD;AAAK,SAAGE;AAAR,KAAhB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AACAhB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWiB,OAAX,CAAD,CAAR;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMlB,WAAW,CAAC,CAACD,QAAF,CAAhC;AAA6C,MAAA,QAAQ,EAAEA;AAAvD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,QAAQ,iBAAI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEe;AAAb;AAAA;AAAA;AAAA;AAAA,YAFf,EAGGb,KAAK,CAACkB,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAElB,KAAd;AAAqB,MAAA,QAAQ,EAAES;AAA/B;AAAA;AAAA;AAAA;AAAA,YAAnB,GAAkE,sBAHrE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhCQZ,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState, useEffect } from 'react'\nimport Form from './components/Form'\n\nfunction App() {\n\n  const [showForm, setShowForm] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http:localhost:5000/tasks')\n      const data = await res.json()\n\n      console.log(data)\n    }\n  })  \n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = {id, ...task};\n    console.log(newTask)\n    setTasks([...tasks, newTask])\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowForm(!showForm)} showForm={showForm}/>\n      {showForm && <Form onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask}/> : 'Add a task to start!'}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}