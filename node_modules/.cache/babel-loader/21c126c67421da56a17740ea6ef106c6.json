{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateo\\\\Documents\\\\Ensolvers\\\\to-do-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showForm, setShowForm] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n    /*const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = {id, ...task};\n    console.log(newTask)\n    setTasks([...tasks, newTask])*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowForm(!showForm),\n      showForm: showForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(Form, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }, this) : 'Add a task to start!']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wxcOtEIOlgBKfWy3IIZoWA+CCTw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mateo/Documents/Ensolvers/to-do-app/src/App.js"],"names":["Header","Tasks","useState","useEffect","Form","App","showForm","setShowForm","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","deleteTask","id","method","filter","task","addTask","headers","body","JSON","stringify","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,QAAQ,GAAG,YAAY;AAC3B,YAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;AACAH,MAAAA,QAAQ,CAACE,eAAD,CAAR;AACD,KAHD;;AAKDD,IAAAA,QAAQ;AACR,GAPQ,EAON,EAPM,CAAT;;AASA,QAAME,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAOD,IAAP;AACD,GALD;;AAOA,QAAME,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC/B,UAAMJ,KAAK,CAAE,+BAA8BI,EAAG,EAAnC,EAAsC;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAtC,CAAX;AAEAV,IAAAA,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAJD;;AAMA,QAAMI,OAAO,GAAG,MAAOD,IAAP,IAAgB;AAC9B,UAAMR,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACrDK,MAAAA,MAAM,EAAE,MAD6C;AAErDI,MAAAA,OAAO,EAAE;AACP,wBAAiB;AADV,OAF4C;AAKrDC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAL8C,KAAhC,CAAvB;AAQA,UAAMN,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWO,IAAX,CAAD,CAAR;AAEA;AACJ;AACA;AACA;AACG,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMR,WAAW,CAAC,CAACD,QAAF,CAAhC;AAA6C,MAAA,QAAQ,EAAEA;AAAvD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,QAAQ,iBAAI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEgB;AAAb;AAAA;AAAA;AAAA;AAAA,YAFf,EAGGd,KAAK,CAACmB,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEnB,KAAd;AAAqB,MAAA,QAAQ,EAAES;AAA/B;AAAA;AAAA;AAAA;AAAA,YAAnB,GAAkE,sBAHrE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArDQZ,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState, useEffect } from 'react'\nimport Form from './components/Form'\n\nfunction App() {\n\n  const [showForm, setShowForm] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n   getTasks()\n  }, [])  \n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {method: 'DELETE'})\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type' : 'application/json'\n      },\n      body : JSON.stringify(task)\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n    /*const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = {id, ...task};\n    console.log(newTask)\n    setTasks([...tasks, newTask])*/\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowForm(!showForm)} showForm={showForm}/>\n      {showForm && <Form onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask}/> : 'Add a task to start!'}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}